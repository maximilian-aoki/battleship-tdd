{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://battleship-tdd/./src/assets/Events.js","webpack://battleship-tdd/./src/assets/Ship.js","webpack://battleship-tdd/./src/assets/Gameboard.js","webpack://battleship-tdd/./src/assets/Player.js","webpack://battleship-tdd/./src/assets-ui/boardUI.js","webpack://battleship-tdd/./src/assets-ui/messageUI.js","webpack://battleship-tdd/./src/index.js"],"sourcesContent":["class Events {\n  constructor() {\n    this.events = {};\n  }\n\n  on(eventName, fn) {\n    this.events[eventName] = this.events[eventName] || [];\n    this.events[eventName].push(fn);\n  }\n\n  off(eventName, fn) {\n    if (this.events[eventName]) {\n      for (let i = 0; i < this.events[eventName].length; i += 1) {\n        if (this.events[eventName][i] === fn) {\n          this.events[eventName].splice(i, 1);\n        }\n      }\n    }\n  }\n\n  emit(eventName, data) {\n    if (this.events[eventName]) {\n      this.events[eventName].forEach((fn) => {\n        fn(data);\n      });\n    }\n  }\n}\n\nconst events = new Events();\nexport { Events, events };\n","export default class Ship {\n  constructor(length, symbol) {\n    this.length = length;\n    this.symbol = symbol;\n    this.hits = 0;\n    this.isSunk = false;\n  }\n\n  hit() {\n    if (this.isSunk === false) {\n      this.hits += 1;\n      this.isSunk = this.hits >= this.length;\n    }\n  }\n}\n","import Ship from './Ship';\n\nexport default class Gameboard {\n  constructor(size) {\n    this.board = this.#createBoard(size);\n    this.size = size;\n    this.ships = [];\n  }\n\n  // private function for instantiating game board with given size\n  #createBoard(size) {\n    const newBoard = [];\n    for (let i = 0; i < size; i += 1) {\n      const newRow = [];\n      for (let j = 0; j < size; j += 1) {\n        newRow.push('');\n      }\n      newBoard.push(newRow);\n    }\n\n    return newBoard;\n  }\n\n  placeShip(orientation, coordArr, boat) {\n    const [boatLength, boatSymbol] = this.#getBoatLength(boat);\n\n    if (\n      this.#isBoardConflict(orientation, coordArr, boatLength) ||\n      this.#isShipConflict(orientation, coordArr, boatLength)\n    ) {\n      return 'illegal move';\n    }\n\n    this.ships.push(new Ship(boatLength, boatSymbol));\n    this.#renderToBoard(orientation, coordArr, boatLength, boatSymbol);\n  }\n\n  // private function for translating ship specs to length and symbol\n  #getBoatLength(boat) {\n    if (boat === 'carrier') {\n      return [5, 'C'];\n    }\n    if (boat === 'battleship') {\n      return [4, 'B'];\n    }\n    if (boat === 'destroyer') {\n      return [3, 'D'];\n    }\n    if (boat === 'submarine') {\n      return [3, 'S'];\n    }\n    if (boat === 'patrol') {\n      return [2, 'P'];\n    }\n    throw new Error('improper boat name format');\n  }\n\n  // private function for checking if ship placement is beyond board\n  #isBoardConflict(orientation, coordArr, boatLength) {\n    if (orientation === 'h') {\n      return coordArr[1] + (boatLength - 1) >= this.size;\n    }\n    if (orientation === 'v') {\n      return coordArr[0] + (boatLength - 1) >= this.size;\n    }\n  }\n\n  // private function for checking if ships overlap\n  #isShipConflict(orientation, coordArr, boatLength) {\n    if (orientation === 'h') {\n      const row = coordArr[0];\n      for (let col = coordArr[1]; col < coordArr[1] + boatLength; col += 1) {\n        if (this.board[row][col] !== '') {\n          return true;\n        }\n      }\n    }\n    if (orientation === 'v') {\n      const col = coordArr[1];\n      for (let row = coordArr[0]; row < coordArr[0] + boatLength; row += 1) {\n        if (this.board[row][col] !== '') {\n          return true;\n        }\n      }\n    }\n  }\n\n  // private function to add ship symbols to board on successful placement\n  #renderToBoard(orientation, coordArr, boatLength, boatSymbol) {\n    if (orientation === 'h') {\n      const row = coordArr[0];\n      for (let col = coordArr[1]; col < coordArr[1] + boatLength; col += 1) {\n        this.board[row][col] = boatSymbol;\n      }\n    }\n    if (orientation === 'v') {\n      const col = coordArr[1];\n      for (let row = coordArr[0]; row < coordArr[0] + boatLength; row += 1) {\n        this.board[row][col] = boatSymbol;\n      }\n    }\n  }\n\n  receiveAttack(coordArr) {\n    if (this.board[coordArr[0]][coordArr[1]] === '') {\n      // shot is a miss\n      this.board[coordArr[0]][coordArr[1]] = 'o';\n      return ['miss'];\n    }\n    if (\n      this.board[coordArr[0]][coordArr[1]] === 'o' ||\n      this.board[coordArr[0]][coordArr[1]] === 'x'\n    ) {\n      // already shot here\n      return ['already targeted coordinate'];\n    }\n    // shot hit a boat\n    const status = {\n      boat: undefined,\n      isSunk: undefined,\n    };\n    this.ships.forEach((ship) => {\n      if (ship.symbol === this.board[coordArr[0]][coordArr[1]]) {\n        ship.hit();\n        status.boat = ship.symbol;\n        status.isSunk = ship.isSunk;\n      }\n    });\n    this.board[coordArr[0]][coordArr[1]] = 'x';\n    return ['hit', status];\n  }\n\n  checkAllSunk() {\n    for (let i = 0; i < this.ships.length; i += 1) {\n      if (!this.ships[i].isSunk) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n","import Gameboard from './Gameboard';\n\nexport default class Player {\n  constructor() {\n    this.playerBoard = new Gameboard(10);\n    this.allCoords = this.#getAllCoords(10);\n  }\n\n  #getAllCoords(size) {\n    const arr = [];\n    for (let i = 0; i < size; i += 1) {\n      for (let j = 0; j < size; j += 1) {\n        arr.push([i, j]);\n      }\n    }\n    return arr;\n  }\n\n  placeShip(orientation, coordArr, boat) {\n    return this.playerBoard.placeShip(orientation, coordArr, boat);\n  }\n\n  attack(enemyPlayer, coordArr) {\n    return enemyPlayer.playerBoard.receiveAttack(coordArr);\n  }\n\n  // computer random attack move\n  randomAttack(enemyPlayer) {\n    const randomIndex = Math.floor(Math.random() * this.allCoords.length);\n    const randomCoords = this.allCoords[randomIndex];\n    this.allCoords.splice(randomIndex, 1);\n\n    if (this.attack(enemyPlayer, randomCoords)[0] === 'hit') {\n      this.randomAttack(enemyPlayer);\n    }\n  }\n\n  // computer random ship placement\n  randomPlaceShips() {\n    const shipOptions = [\n      'carrier',\n      'battleship',\n      'destroyer',\n      'submarine',\n      'patrol',\n    ];\n    shipOptions.forEach((shipType) => {\n      this.#randomPlace(shipType);\n    });\n  }\n\n  #randomPlace(shipType) {\n    const randomOrientation = ['v', 'h'][Math.floor(Math.random() * 2)];\n    const randomCoords = this.allCoords[Math.floor(Math.random() * 100)];\n\n    if (\n      this.placeShip(randomOrientation, randomCoords, shipType) ===\n      'illegal move'\n    ) {\n      this.#randomPlace(shipType);\n    }\n  }\n}\n","import { events } from '../assets/Events';\n\n// state\nconst state = {\n  player: {\n    currentBoard: undefined,\n    remainingShips: [\n      ['battleship', 4],\n      ['destroyer', 3],\n      ['submarine', 3],\n      ['patrol', 2],\n    ],\n    currentShip: ['carrier', 5],\n    currentOrientation: 'v',\n    squaresToRender: [],\n  },\n\n  computer: {\n    currentBoard: undefined,\n  },\n};\n\n// cache to dom\nconst playerFrame = document.querySelector('.player-frame');\nconst computerFrame = document.querySelector('.computer-frame');\n\n// default event binding\nwindow.addEventListener('keydown', orientationSwitch);\n\nexport function orientationSwitch(e) {\n  if (e.key === 'v' || e.key === 'V') {\n    state.player.currentOrientation = 'v';\n    resetValidate();\n  }\n  if (e.key === 'h' || e.key === 'H') {\n    state.player.currentOrientation = 'h';\n    resetValidate();\n  }\n}\n\n// custom event binding\nevents.on('init board placement', (player) => {\n  state.player.currentBoard = player.playerBoard.board;\n  renderBoard(playerFrame, player, placementCallback);\n});\n\nevents.on('render attack board', (players) => {\n  state.player.currentBoard = players[0].playerBoard.board;\n  state.computer.currentBoard = players[1].playerBoard.board;\n\n  renderBoard(playerFrame, players[0], disabledCallback);\n  renderBoard(computerFrame, players[1], attackCallback);\n});\n\nevents.on('player miss', (players) => {\n  state.player.currentBoard = players[0].playerBoard.board;\n  state.computer.currentBoard = players[1].playerBoard.board;\n\n  renderBoard(playerFrame, players[0], disabledCallback);\n  renderBoard(computerFrame, players[1], disabledCallback);\n});\n\nevents.on('player won', (players) => {\n  state.player.currentBoard = players[0].playerBoard.board;\n  state.computer.currentBoard = players[1].playerBoard.board;\n\n  renderBoard(playerFrame, players[0], disabledCallback);\n  renderBoard(computerFrame, players[1], disabledCallback);\n});\n\nevents.on('computer won', (players) => {\n  state.player.currentBoard = players[0].playerBoard.board;\n  state.computer.currentBoard = players[1].playerBoard.board;\n\n  renderBoard(playerFrame, players[0], disabledCallback);\n  renderBoard(computerFrame, players[1], disabledCallback);\n});\n\n// methods\nexport default function renderBoard(frame, player, listenerCallback) {\n  frame.removeChild(frame.firstElementChild);\n\n  const newBoard = document.createElement('div');\n  newBoard.classList.add('board');\n  newBoard.classList.add('grid');\n\n  for (let i = 0; i < player.playerBoard.board.length; i += 1) {\n    for (let j = 0; j < player.playerBoard.board.length; j += 1) {\n      const newSquare = document.createElement('div');\n      newSquare.setAttribute('data-index', `${i}${j}`);\n\n      // changes depending on placement or attack phase\n      listenerCallback(newSquare);\n\n      // colour in placed squares\n      if (frame === playerFrame) {\n        if (player.playerBoard.board[i][j] !== '') {\n          newSquare.classList.add('ship');\n        }\n      }\n\n      // colour in hit and missed squares\n      if (player.playerBoard.board[i][j] === 'x') {\n        newSquare.classList.add('hit');\n      }\n      if (player.playerBoard.board[i][j] === 'o') {\n        newSquare.classList.add('miss');\n      }\n\n      newBoard.appendChild(newSquare);\n    }\n  }\n\n  frame.appendChild(newBoard);\n}\n\n// callback for board render in placement phase\nfunction placementCallback(newSquare) {\n  newSquare.addEventListener('mouseover', validatePlacement);\n  newSquare.addEventListener('mouseout', removeCosmetics);\n  newSquare.addEventListener('click', placeShip);\n}\n\nfunction validatePlacement(e) {\n  const targetCoords = !Array.isArray(e)\n    ? e.target\n        .getAttribute('data-index')\n        .split('')\n        .map((str) => Number(str))\n    : e;\n  let validity = 'valid';\n\n  if (state.player.currentOrientation === 'v') {\n    if (targetCoords[0] + state.player.currentShip[1] > 10) {\n      validity = 'invalid';\n    }\n    const col = targetCoords[1];\n    for (\n      let row = targetCoords[0];\n      row < targetCoords[0] + state.player.currentShip[1] && row < 10;\n      row += 1\n    ) {\n      state.player.squaresToRender.push([row, col]);\n      if (state.player.currentBoard[row][col] !== '') {\n        validity = 'invalid';\n      }\n    }\n  }\n\n  if (state.player.currentOrientation === 'h') {\n    if (targetCoords[1] + state.player.currentShip[1] > 10) {\n      validity = 'invalid';\n    }\n    const row = targetCoords[0];\n    for (\n      let col = targetCoords[1];\n      col < targetCoords[1] + state.player.currentShip[1] && col < 10;\n      col += 1\n    ) {\n      state.player.squaresToRender.push([row, col]);\n      if (state.player.currentBoard[row][col] !== '') {\n        validity = 'invalid';\n      }\n    }\n  }\n\n  renderValidity(validity);\n}\n\nfunction renderValidity(validity) {\n  state.player.squaresToRender.forEach((coord) => {\n    const square = document.querySelector(\n      `[data-index='${coord[0]}${coord[1]}']`,\n    );\n    square.classList.add(validity);\n  });\n}\n\nfunction removeCosmetics() {\n  state.player.squaresToRender.forEach((coord) => {\n    const square = document.querySelector(\n      `[data-index='${coord[0]}${coord[1]}']`,\n    );\n    square.classList.remove('invalid');\n    square.classList.remove('valid');\n  });\n\n  state.player.squaresToRender = [];\n}\n\nfunction resetValidate() {\n  if (state.player.squaresToRender.length > 0) {\n    const initCoord = state.player.squaresToRender[0];\n    removeCosmetics();\n    validatePlacement(initCoord);\n  }\n}\n\nfunction placeShip(e) {\n  if (e.target.getAttribute('class') === 'valid') {\n    const placeCoord = e.target\n      .getAttribute('data-index')\n      .split('')\n      .map((str) => Number(str));\n\n    if (state.player.remainingShips.length > 0) {\n      events.emit('place ship', {\n        orientation: state.player.currentOrientation,\n        coordArr: placeCoord,\n        boat: state.player.currentShip[0],\n        nextBoat: state.player.remainingShips[0][0],\n      });\n\n      state.player.currentShip = state.player.remainingShips.shift();\n    } else if (state.player.remainingShips.length === 0) {\n      events.emit('place final ship', {\n        orientation: state.player.currentOrientation,\n        coordArr: placeCoord,\n        boat: state.player.currentShip[0],\n      });\n\n      window.removeEventListener('keydown', orientationSwitch);\n    }\n  }\n}\n\n// callback for player board render in attack phase\nfunction disabledCallback(newSquare) {\n  newSquare.style.cursor = 'auto';\n}\n\n// callback for computer board render in attack phase\nfunction attackCallback(newSquare) {\n  newSquare.addEventListener('mouseover', validateAttack);\n  newSquare.addEventListener('mouseout', removeAttackCosmetics);\n  newSquare.addEventListener('click', renderAttack);\n}\n\nfunction validateAttack(e) {\n  const [row, col] = e.target\n    .getAttribute('data-index')\n    .split('')\n    .map((str) => Number(str));\n\n  if (\n    state.computer.currentBoard[row][col] !== 'x' &&\n    state.computer.currentBoard[row][col] !== 'o'\n  ) {\n    e.target.classList.add('available');\n  }\n}\n\nfunction removeAttackCosmetics(e) {\n  e.target.classList.remove('available');\n}\n\nfunction renderAttack(e) {\n  if (e.target.getAttribute('class') === 'available') {\n    const targetCoord = e.target\n      .getAttribute('data-index')\n      .split('')\n      .map((str) => Number(str));\n\n    events.emit('player sends attack', targetCoord);\n  }\n}\n","import { events } from '../assets/Events';\n\n// cache to dom\nconst messages = document.querySelector('.messages');\n\n// custom event binding\nevents.on('change placement message', placementMessage);\nevents.on('ready fire message', readyFireMessage);\nevents.on('player hit status message', playerHitMessage);\nevents.on('player miss', playerMissMessage);\nevents.on('computer shot message', computerShotMessage);\nevents.on('player won', playerWinMessage);\nevents.on('computer won', computerWinMessage);\n\n// methods\nexport default function placementMessage(boat) {\n  messages.innerHTML = `\n    <h2>Now place your ${boat.toUpperCase()}</h2>\n    <p>(toggle 'v' for vertical and 'h' for horizontal)</p>\n    `;\n}\n\nexport function readyFireMessage() {\n  messages.innerHTML = `\n    <h2>🔫 Fire when ready 🔫</h2>\n    `;\n}\n\nexport function playerHitMessage(status) {\n  const boat = getBoat(status.boat);\n  const sunkStatus = status.isSunk ? 'sunk' : 'hit';\n  messages.innerHTML = `\n    <h2>💥 You ${sunkStatus} the enemy's ${boat}! 💥</h2>\n    <p>Fire again when ready...</p>\n    `;\n}\n\nfunction getBoat(symbol) {\n  if (symbol === 'C') {\n    return 'CARRIER';\n  }\n  if (symbol === 'B') {\n    return 'BATTLESHIP';\n  }\n  if (symbol === 'D') {\n    return 'DESTROYER';\n  }\n  if (symbol === 'S') {\n    return 'SUBMARINE';\n  }\n  if (symbol === 'P') {\n    return 'PATROL';\n  }\n}\n\nexport function playerMissMessage() {\n  messages.innerHTML = `\n    <h2>You shot and missed!</h2>\n    <p>Opponent is sending a volley...</p>\n    `;\n}\n\nexport function computerShotMessage() {\n  messages.innerHTML = `\n    <h2>Your opponent has fired their shots!</h2>\n    <p>🔫 Fire when ready 🔫</p>\n    `;\n}\n\nexport function playerWinMessage() {\n  messages.innerHTML = `\n    <h2>👑 Congrats, you sunk all the enemy ships and won the battle! 👑</h2>\n    <p>Refresh the browser to play again.</p>\n    `;\n}\n\nexport function computerWinMessage() {\n  messages.innerHTML = `\n    <h2>💀 Your opponent sunk all your ships, you lost the battle! 💀</h2>\n    <p>Refresh the browser to play again.</p>\n    `;\n}\n","// import css\nimport './static/reset.css';\nimport './static/style.css';\n\n// import modules (events optional)\nimport { events } from './assets/Events';\nimport Player from './assets/Player';\nimport * as BoardUI from './assets-ui/boardUI';\nimport * as MessageUI from './assets-ui/messageUI';\n\n// ---------- GAME LOOP ---------- //\nconst player = new Player();\nconst computer = new Player();\n\nevents.emit('init board placement', player);\n\n// custom event binding\nevents.on('place ship', (data) => {\n  player.placeShip(data.orientation, data.coordArr, data.boat);\n  events.emit('change placement message', data.nextBoat);\n  events.emit('init board placement', player);\n});\n\nevents.on('place final ship', (data) => {\n  player.placeShip(data.orientation, data.coordArr, data.boat);\n  computer.randomPlaceShips();\n  events.emit('ready fire message');\n\n  events.emit('render attack board', [player, computer]);\n});\n\nevents.on('player sends attack', (coord) => {\n  const result = player.attack(computer, coord);\n  if (result[0] === 'hit') {\n    if (computer.playerBoard.checkAllSunk()) {\n      events.emit('player won', [player, computer]);\n    } else {\n      events.emit('player hit status message', result[1]);\n      events.emit('render attack board', [player, computer]);\n    }\n  } else {\n    events.emit('player miss', [player, computer]);\n\n    setTimeout(() => {\n      computer.randomAttack(player);\n      if (player.playerBoard.checkAllSunk()) {\n        events.emit('computer won', [player, computer]);\n      } else {\n        events.emit('computer shot message');\n        events.emit('render attack board', [player, computer]);\n      }\n    }, 500);\n  }\n});\n"],"names":["events","constructor","this","on","eventName","fn","push","off","i","length","splice","emit","data","forEach","Ship","symbol","hits","isSunk","hit","Gameboard","size","board","ships","newBoard","newRow","j","placeShip","orientation","coordArr","boat","boatLength","boatSymbol","Error","row","col","receiveAttack","status","undefined","ship","checkAllSunk","Player","playerBoard","allCoords","arr","attack","enemyPlayer","randomAttack","randomIndex","Math","floor","random","randomCoords","randomPlaceShips","shipType","randomOrientation","state","player","currentBoard","remainingShips","currentShip","currentOrientation","squaresToRender","computer","playerFrame","document","querySelector","computerFrame","orientationSwitch","e","key","resetValidate","renderBoard","frame","listenerCallback","removeChild","firstElementChild","createElement","classList","add","newSquare","setAttribute","appendChild","placementCallback","addEventListener","validatePlacement","removeCosmetics","targetCoords","Array","isArray","target","getAttribute","split","map","str","Number","validity","coord","renderValidity","square","remove","initCoord","placeCoord","nextBoat","shift","window","removeEventListener","disabledCallback","style","cursor","attackCallback","validateAttack","removeAttackCosmetics","renderAttack","targetCoord","players","messages","innerHTML","toUpperCase","sunkStatus","result","setTimeout"],"sourceRoot":""}